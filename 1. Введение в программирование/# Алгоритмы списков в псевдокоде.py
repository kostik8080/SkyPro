"""Подходит для задач, когда нужно применить какое-то преобразование ко всему
списку – удвоить или уменьшить, поменять тип,
дописать текст и так далее. В качестве примера – получение удвоенного списка"""

"""Есть исходный список

Создать новый список

Для каждого х в исходном списке
  Вычислить новое значение из х
  Положить в новый список
    
Вывести новый список"""

numbers = [1, 2, 3, 4, 5]

double_nums = []

for num in numbers:
    new_val = num * 2
    double_nums.append(new_val)

print(double_nums)

"""Использование счетчика

Подходит для задач, где нужно подсчитать количество элементов в
 списке. В качестве примера – счетчик четных чисел."""

"""Есть исходный список

Создать cчетчик = 0
Для каждого х в исходном списке
   Проверить условие для х
   Если условие истинно
       Увеличить счетчик на +1

Вывести счетчик"""

numbers = [1, 2, 3, 4, 5]

number_of_evens = 0

for num in numbers:
    if num % 2 == 0:
        number_of_evens += 1

print(number_of_evens)

"""Фильтрация списка

Алгоритм подходит, когда нам нужно на основе одного списка создать другой, но короче, выбирая только
 те элементы, которые подходят по критерию. В качестве примера – получение списка четных чисел."""

"""Есть исходный список
Создадим новый список

Для каждого х в исходном списке
  если условие для х выполняется
    добавить х в новый список

Вывести новый список"""

all_els = [1, 2, 3, 4, 5]
even_els = []

for el in all_els:
    if el % 2 == 0:
        even_els.append(el)

print(even_els)

"""Разделение списка

Алгоритм подходит, когда нам нужно разделить список на два (три итд) по определенному критерию.
 В качестве примера – разделение на четные и нечетные."""

"""Есть исходный список

Создадим новый список четных L1 
Создадим новый список нечетных L2

Для каждого х в исходном списке
   если условие для х выполняется
       добавить х в список L1
   иначе
       добавить х в список L2

Вывести оба списка"""

all_els = [1, 2, 3, 4, 5]

even_els = []
odd_els = []

for el in all_els:
    if el % 2 == 0:
        even_els.append(el)
    else:
        odd_els.append(el)

print(even_els)
print(odd_els)

"""Поиск максимума в списке

Алгоритм подходит, когда нам нужно найти максимум в списке по какому то критерию – количеству делителей, длине
 или другим свойствам значения.

В качестве примера – найдем самое длинное слово"""

"""Есть исходный список

Создадим м для макс значения
равный первому эл-ту

Для каждого х в исходном списке
   если х больше м
       записать х в м

Вывести м"""

all_els = ["bo", "boo", "booo"]

max_el = all_els[0]

for el in all_els:
    if len(el) > len(max_el):
        max_el = el

print(max_el)

"""### Поиск элемента по критерию

Алгоритм подходит, когда нам нужно найти элемент в списке, но только один.
 В качестве примера – поиск строки с длиной в 2 символа в списке."""

"""Есть исходный список

Делаем для найденного переменную x

Для каждого х в исходном списке
	Вычислить подходит ли х
  Если подходит
    Записать в переменную
    Остановить цикл

Вывести х"""

all_els = ["bo", "boo", "booo"]

el_found = None

for el in all_els:
    if len(el) == 2:
        el_found = el
        break

print(el_found)
